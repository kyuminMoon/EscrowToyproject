server:
  port: 8083
  servlet:
    contextPath: /api

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/payment?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: root
    password: password

  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: create
    generate-ddl: true
    properties:
      hibernate:
        hdm2ddl.auto: create
        format_sql: true

  output:
    ansi:
      enabled: always

  profiles:
    include: local

  kafka:
    # https://docs.spring.io/spring-cloud-stream-binder-kafka/docs/3.2.1/reference/html/spring-cloud-stream-binder-kafka.html#_setting_up_bootstrap_server_configuration
    bootstrap-servers: http://localhost:9092
    producer:
      acks: 1
      batch-size: 1000000
      key-serializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        linger.ms: 100

jwt:
  header: Authorization
  secret: rutyweorituwyerotiuweyrtoiuweyrtoweiurtywoeighdfsojkghsdfgsdofiguwyertouw
  access-token-validity-in-seconds: 3600 # 1 hour
  refresh-token-validity-in-seconds: 86400 # 1 day

logging:
  level:
    org.springframework.web.client: DEBUG
    org.hibernate.type: TRACE
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: trace
    org.hibernate.orm.jdbc.bind: trace
    org.hibernate.stat: debug


# 아임웹 -> 포트원으로 이름 변경
portone:
  pg-mall-id: a
  secret-key: b
  client-key: c